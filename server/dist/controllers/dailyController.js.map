{"version":3,"sources":["../../src/controllers/dailyController.js"],"names":["Moment","require","getDaily","req","res","next","User","findById","_id","user","populate","path","options","sort","then","data","send","catch","err","json","createDaily","body","highlights","positive","negative","wakeup","sleep","habit1","habit2","habit3","selectedDate","daily","Daily","user_id","week","parseInt","format","year","month","fullDate","save","savedDaily","findByIdAndUpdate","$push","newDaily","Weekly","findOneAndUpdate","habits","$each","push","d","weekly","weekStart","startOf","weekEnd","endOf","best","worst","nextWeek","savedWeekly","newWeekly","console","log","Monthly","monthly","monthAt","remember","start","stop","savedMonthly","newMonthly","sendStatus","deleteDaily","dailyID","params","id","update","$pull","$in","findByIdAndRemove","updateDaily","dailyId","findOne","updateOne","oldValues","$set"],"mappings":"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","file":"dailyController.js","sourcesContent":["import token from '../services/token';\nimport User from '../models/user';\nimport Daily from '../models/Daily';\nimport Weekly from '../models/Weekly';\nimport Monthly from '../models/Monthly';\nconst Moment = require('moment');\n// import dailyController from './dailyController'\n\n\nexport default {\n\n    // Daily functions\n    getDaily: (req, res, next) => {\n        User.findById({ _id: req.user._id })\n            .populate({ path: 'daily', options: { sort: { 'fullDate': 1 } } })\n            .then(function (data) {\n\n\n                res.send(data)\n            })\n            .catch(function (err) {\n                // If an error occurred, send it to the client\n                res.json(err);\n            });\n\n    },\n    createDaily: (req, res, next) => {\n\n        const {\n            highlights,\n            positive,\n            negative,\n            wakeup,\n            sleep,\n            habit1,\n            habit2,\n            habit3,\n            selectedDate\n\n        } = req.body;\n\n\n        const daily = new Daily({\n            highlights: highlights,\n            positive: positive,\n            negative: negative,\n            wakeup: wakeup,\n            sleep: sleep,\n            habit1: habit1,\n            habit2: habit2,\n            habit3: habit3,\n            selectedDate: selectedDate,\n            user_id: req.user._id,\n            week: parseInt(Moment(selectedDate).format('w') - 1),\n            year: parseInt(Moment(selectedDate).format('YYYY')),\n            month: parseInt(Moment(selectedDate).format('MM')),\n            fullDate: Moment(selectedDate).format('MM-DD-YYYY')\n\n\n        })\n\n        daily.save(function (err, savedDaily) {\n            if (err) {\n                return next(err)\n            }\n        }).then(newDaily => {\n            User.findByIdAndUpdate({ _id: req.user._id }, { $push: { daily: newDaily._id } })\n                .then((data) => {\n                    Weekly.findOneAndUpdate({ user_id: req.user._id, week: newDaily.week, year: newDaily.year },\n                        { $push: { habits: { $each: [newDaily.habit1, newDaily.habit2, newDaily.habit3] } } })\n                        .then(d => {\n                            const habits = []\n                            habits.push(newDaily.habit1, newDaily.habit2, newDaily.habit3)\n                            if (d === null) {\n\n                                const weekly = new Weekly({\n                                    weekStart: Moment(req.body.selectedDate).startOf('week').format('MM/DD'),\n                                    weekEnd: Moment(req.body.selectedDate).endOf('week').format('MM/DD'),\n                                    week: newDaily.week,\n                                    year: newDaily.year,\n                                    month: newDaily.month,\n                                    user_id: req.user._id,\n                                    habits: habits,\n                                    best: '',\n                                    worst: '',\n                                    nextWeek: ''\n\n                                })\n\n\n                                weekly.save(function (err, savedWeekly) {\n                                    if (err) {\n                                        return next(err)\n                                    }\n                                }).then(newWeekly => {\n                                    User.findByIdAndUpdate({ _id: req.user._id }, { $push: { weekly: newWeekly._id } })\n                                        .then()\n                                        .catch(err => console.log(err))\n\n                                })\n                                    .catch(next)\n                            }\n\n                        }).catch(err => console.log(err))\n\n                    // res.\n                    Monthly.findOneAndUpdate({ user_id: req.user._id, month: newDaily.month, year: newDaily.year },\n                        { $push: { habits: { $each: [newDaily.habit1, newDaily.habit2, newDaily.habit3] } } })\n                        .then(d => {\n                            const habits = []\n                            habits.push(newDaily.habit1, newDaily.habit2, newDaily.habit3)\n                            if (d == null) {\n                                const monthly = new Monthly({\n                                    monthAt: Moment(req.body.selectedDate).format('MMMM'),\n                                    month: newDaily.month,\n                                    week: newDaily.week,\n                                    year: newDaily.year,\n                                    user_id: req.user._id,\n                                    habits: habits,\n                                    remember: '',\n                                    start: '',\n                                    stop: ''\n\n                                })\n\n\n                                monthly.save(function (err, savedMonthly) {\n                                    if (err) {\n                                        return next(err)\n                                    }\n                                }).then(newMonthly => {\n                                    User.findByIdAndUpdate({ _id: req.user._id }, { $push: { monthly: newMonthly._id } })\n                                        .then()\n                                        .catch(err => console.log(err))\n\n                                }).catch(next)\n\n                            }\n\n                        })\n                        .catch(err => console.log(err))\n                })\n                .catch(err => console.log(err))\n            res.sendStatus(200);\n        })\n            .catch(next)\n\n    },\n\n    deleteDaily: (req, res, next) => {\n        const dailyID = req.params.id\n        User.update({ _id: req.user._id }, { $pull: { daily: { $in: [dailyID] } } })\n            .then(Daily.findByIdAndRemove(dailyID, function (err, data) {\n                res.sendStatus(200)\n            }))\n            .catch(next)\n    },\n\n\n    updateDaily: (req, res, next) => {\n\n        const dailyId = req.params.id;\n        const newDaily = {\n            ...req.body,\n            week: parseInt(Moment(req.body.selectedDate).format('w') - 1),\n            year: parseInt(Moment(req.body.selectedDate).format('YYYY'))\n        }\n\n\n        Daily.findByIdAndUpdate(dailyId, newDaily)\n            .then(newDaily => {\n                Weekly.findOne({ user_id: newDaily.user_id }\n                )\n                    .then(data => {\n                        Weekly.updateOne({ _id: data._id, habits: req.body.oldValues.habit1 }, { $set: { \"habits.$\": req.body.habit1 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n                        Weekly.updateOne({ _id: data._id, habits: req.body.oldValues.habit2 }, { $set: { \"habits.$\": req.body.habit2 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n                        Weekly.updateOne({ _id: data._id, habits: req.body.oldValues.habit3 }, { $set: { \"habits.$\": req.body.habit3 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n\n                    }).catch(err => console.log('err', err));\n                Monthly.findOne({ user_id: newDaily.user_id }\n                )\n                    .then(data => {\n                        Monthly.updateOne({ _id: data._id, habits: req.body.oldValues.habit1 }, { $set: { \"habits.$\": req.body.habit1 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n                        Monthly.updateOne({ _id: data._id, habits: req.body.oldValues.habit2 }, { $set: { \"habits.$\": req.body.habit2 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n                        Monthly.updateOne({ _id: data._id, habits: req.body.oldValues.habit3 }, { $set: { \"habits.$\": req.body.habit3 } })\n                            .then()\n                            .catch(err => console.log('err', err))\n                    }).catch(err => console.log('err', err))\n                res.sendStatus(200);\n            })\n            .catch(next)\n    }\n}\n\n\n"]}