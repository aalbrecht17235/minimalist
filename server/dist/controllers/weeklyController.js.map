{"version":3,"sources":["../../src/controllers/weeklyController.js"],"names":["getWeekly","req","res","next","User","findById","_id","user","populate","path","options","sort","then","data","send","catch","err","json","deleteWeekly","weeklyID","params","id","update","$pull","weekly","$in","Weekly","findByIdAndRemove","status","sendStatus","updateWeekly","weeklyId","newWeekly","body","findByIdAndUpdate","new"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AACA;;;kBAGe;;AAEXA,eAAW,mBAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAiB;AACxBC,uBAAKC,QAAL,CAAc,EAAEC,KAAKL,IAAIM,IAAJ,CAASD,GAAhB,EAAd,EACKE,QADL,CACc,EAACC,MAAM,QAAP,EAAiBC,SAAS,EAAEC,MAAM,EAAE,QAAQ,CAAV,EAAR,EAA1B,EADd,EAEKH,QAFL,CAEc,OAFd,EAGKI,IAHL,CAGU,UAAUC,IAAV,EAAgB;AAClBX,gBAAIY,IAAJ,CAASD,IAAT;AACH,SALL,EAMKE,KANL,CAMW,UAAUC,GAAV,EAAe;AAClB;AACAd,gBAAIe,IAAJ,CAASD,GAAT;AACH,SATL;AAWH,KAdU;AAef;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEIE,kBAAc,sBAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B,YAAMgB,WAAWlB,IAAImB,MAAJ,CAAWC,EAA5B;AACAjB,uBAAKkB,MAAL,CAAY,EAAChB,KAAKL,IAAIM,IAAJ,CAASD,GAAf,EAAZ,EAAiC,EAAEiB,OAAO,EAAEC,QAAQ,EAAEC,KAAM,CAACN,QAAD,CAAR,EAAV,EAAT,EAAjC,EAECP,IAFD,CAEMc,iBAAOC,iBAAP,CAAyBR,QAAzB,EAAmC,UAASH,GAAT,EAAcH,IAAd,EAAmB;AACxD,gBAAIG,GAAJ,EAAS,OAAOd,IAAI0B,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqBE,GAArB,CAAP;;AAETd,gBAAI2B,UAAJ,CAAe,GAAf;AACH,SAJK,CAFN,EAOCd,KAPD,CAOOZ,IAPP;AAQC,KAhEM;;AAmEX2B,kBAAc,sBAAC7B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAE1B,YAAM4B,WAAW9B,IAAImB,MAAJ,CAAWC,EAA5B;AACA,YAAMW,yBAAgB/B,IAAIgC,IAApB,CAAN;;AAGAP,yBAAOQ,iBAAP,CAAyBH,QAAzB,EAAmCC,SAAnC,EAA8C;AACtCG,iBAAK;AADiC,SAA9C,EAGKvB,IAHL,CAGU,qBAAa;AACfV,gBAAI2B,UAAJ,CAAe,GAAf;AACH,SALL,EAMKd,KANL,CAMWZ,IANX;AAOP;;AAhFU,C","file":"weeklyController.js","sourcesContent":["import User from '../models/user';\nimport Weekly from '../models/Weekly';\n// import dailyController from './dailyController'\n\n\nexport default {\n    \n    getWeekly: (req,res,next) =>{\n        User.findById({ _id: req.user._id })\n            .populate({path: 'weekly', options: { sort: { 'week': 1 } } })\n            .populate('daily')\n            .then(function (data) {\n                res.send(data)\n            })\n            .catch(function (err) {\n                // If an error occurred, send it to the client\n                res.json(err);\n            });\n       \n    },\n//     createWeekly: (req, res, next) => {\n// //         \n\n//         User.findById({_id: req.user._id})\n//         .populate({path: 'weekly', options: { sort: { 'week': 1 } } })\n//         .then(weekly => {\n\n//         })\n//          const {\n//             best,\n//             worst,\n//             nextWeek,\n//         } = req.body;\n//         let newDate = new Date()\n//         const weekly = new Weekly({\n           \n//             week:  parseInt(Moment(newDate).format('w') - 1),\n//             year: parseInt(Moment(newDate).format('YYYY')),\n//             month: parseInt(Moment(newDate).format('MM')),\n//             best: best,\n//             worst: worst,\n//             nextWeek: nextWeek,\n//             user_id: req.user._id\n//                 })\n\n//                 weekly.save(function (err, savedWeekly) {\n//                     if (err) {\n//                         return next(err)\n//                     }\n//                 }).then(newWeekly => {\n//                     User.findByIdAndUpdate({_id:req.user._id},{ $push: {weekly: newWeekly._id}})\n//                     .then((data)=> res.sendStatus(200))\n//                     .catch(err=>console.log(err))\n\n//                     res.sendStatus(200);\n//                 })\n//                 .catch(next)\n//     },\n\n    deleteWeekly: (req, res, next) => {\n        const weeklyID = req.params.id\n        User.update({_id: req.user._id}, { $pull: { weekly: { $in:  [weeklyID]}}})\n\n        .then(Weekly.findByIdAndRemove(weeklyID, function(err, data){\n            if (err) return res.status(500).send(err);\n           \n            res.sendStatus(200)\n        }))\n        .catch(next)\n        },\n        \n    \n    updateWeekly: (req, res, next) => {\n        \n            const weeklyId = req.params.id;\n            const newWeekly = {...req.body}\n           \n           \n            Weekly.findByIdAndUpdate(weeklyId, newWeekly, {\n                    new: true\n                })\n                .then(newWeekly => {\n                    res.sendStatus(200);\n                })\n                .catch(next)\n    }\n    \n}\n"]}